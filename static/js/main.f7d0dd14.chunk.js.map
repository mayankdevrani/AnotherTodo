{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","map","item","filter","el","TodoList","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNA0BeA,EAxBF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAc3C,OACI,iCACI,uBAAOC,MAAOJ,EAAWK,SAdR,SAACC,GACtBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBH,EAAaK,EAAEG,OAAOL,QAYmCM,KAAK,OAAOC,UAAU,eACvE,wBAAQC,QAXM,SAACN,GACvBA,EAAEO,iBACFV,EAAS,GAAD,mBACDD,GADC,CACM,CAACY,KAAMd,EAAWe,WAAW,EAAOC,GAAkB,IAAdC,KAAKC,aAE3DjB,EAAa,KAM+BU,UAAU,cAAcD,KAAK,SAAjE,SACI,mBAAGC,UAAU,6B,OCYlBQ,EA9BF,SAAC,GAAmC,IAAlCL,EAAiC,EAAjCA,KAAMM,EAA2B,EAA3BA,KAAMlB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAiB9B,OACI,sBAAKQ,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeS,EAAKL,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QAdQ,WACpBT,EAASD,EAAMmB,KAAI,SAAAC,GACf,OAAGA,EAAKN,KAAOI,EAAKJ,GAChB,2BACOM,GADP,IACaP,WAAYO,EAAKP,YAG3BO,OAO2BX,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QArBM,WAClBT,EAASD,EAAMqB,QAAO,SAAAC,GAAE,OAAIA,EAAGR,KAAOI,EAAKJ,QAoBPL,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCXdc,EAZE,SAAC,GAAuB,IAAtBvB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACtB,OACI,qBAAKQ,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKT,EAAMmB,KAAI,SAAAD,GAAI,OACX,cAAC,EAAD,CAAMA,KAAMA,EAAMlB,MAAOA,EAAOC,SAAUA,EAAwBW,KAAMM,EAAKN,MAApBM,EAAKJ,Y,MCYnEU,MAff,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACN3B,EADM,KACKC,EADL,OAEa0B,mBAAS,IAFtB,mBAENzB,EAFM,KAECC,EAFD,KAIb,OACE,sBAAKQ,UAAU,MAAf,UACE,iCACE,6CAEF,cAAC,EAAD,CAAMT,MAAOA,EAAOC,SAAUA,EAAUH,UAAWA,EAAWC,aAAcA,IAC5E,cAAC,EAAD,CAAUC,MAAOA,EAAOC,SAAUA,QCHzByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7d0dd14.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({inputText, setInputText, todos, setTodos}) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random()*1000}\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n\r\n    return(\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n                <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id));\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id){\r\n                return{\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos}) => {\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {todos.map(todo => (\r\n                    <Todo todo={todo} todos={todos} setTodos={setTodos} key={todo.id} text={todo.text}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useState  } from 'react';\nimport Form from './Components/Form';\nimport TodoList from './Components/TodoList';\nimport './App.css';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} />\n      <TodoList todos={todos} setTodos={setTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}